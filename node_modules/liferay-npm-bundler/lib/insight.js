"use strict";
/**
 * Â© 2017 Liferay, Inc. <https://liferay.com>
 *
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const insight_1 = __importDefault(require("insight"));
const path_1 = __importDefault(require("path"));
const read_json_sync_1 = __importDefault(require("read-json-sync"));
const GA_TOKEN = 'UA-37033501-13';
let insight;
/**
 * Initialize insight facility
 * @return {Promise} a promise fulfilled when initialization is done
 */
function init() {
    return new Promise(resolve => {
        try {
            const projectPkgJson = read_json_sync_1.default(path_1.default.join(process.cwd(), 'package.json'));
            exports.PROJECT_NAME = projectPkgJson.name;
            exports.PROJECT_VERSION = projectPkgJson.version;
            insight = new insight_1.default({
                trackingCode: GA_TOKEN,
                pkg: require('../package.json'),
            });
        }
        catch (err) {
            // ignore
        }
        if (insight && insight.optOut === undefined) {
            insight.askPermission(undefined, resolve);
        }
        else {
            resolve();
        }
    });
}
exports.init = init;
exports.track = (...args) => {
    if (insight) {
        insight.track(insight.config.get('clientId'), insight.PROJECT_NAME, ...args);
    }
};
